# For the main application on port 8000
server {
    listen 8000;
    server_name ec2-3-109-226-12.ap-south-1.compute.amazonaws.com;  # Main domain

    location /deploy {
        proxy_pass http://localhost:8000;  # Forward to your backend application
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /status {
        proxy_pass http://localhost:8000;  # Forward to your backend application
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}



    listen 8001;
    # Updated pattern to match any subdomain before your EC2 domain
    server_name *.deploy.100xnavi.com;
    
    location / {
        proxy_pass http://localhost:3001;  # Match your Node.js server port
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;  # This is important to preserve the original host
        proxy_cache_bypass $http_upgrade;
        
        # Add these headers to ensure the original hostname is passed to your Node.js app
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}